<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fresh.mapper.user.UserMapper" >
  <resultMap id="BaseResultMap" type="com.fresh.domain.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="user_sex" property="userSex" jdbcType="INTEGER" />
    <result column="user_photo" property="userPhoto" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, username, password, user_sex, user_photo, user_phone, createtime, flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fresh.domain.User" >
    insert into t_user (user_id, username, password, 
      user_sex, user_photo, user_phone, 
      createtime, flag)
    values (null , #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{userSex,jdbcType=INTEGER}, #{userPhoto,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, 
      now(), #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fresh.domain.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="userSex != null" >
        user_sex,
      </if>
      <if test="userPhoto != null" >
        user_photo,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="flag != null" >
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null" >
        #{userSex,jdbcType=INTEGER},
      </if>
      <if test="userPhoto != null" >
        #{userPhoto,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fresh.domain.User" >
    update t_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null" >
        user_sex = #{userSex,jdbcType=INTEGER},
      </if>
      <if test="userPhoto != null" >
        user_photo = #{userPhoto,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fresh.domain.User" >
    update t_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=INTEGER},
      user_photo = #{userPhoto,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <select id="selectPhone" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>from
    t_user where user_phone=#{phone}
  </select>

  <select id="selectByName" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>from
    t_user where username=#{username}
  </select>
</mapper>